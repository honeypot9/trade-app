# destination = exchange name
# queue = destination + group name
# Message broker
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
# Database
#DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
#DATASOURCE_USERNAME=postgres
#DATASOURCE_PASSWORD=password
###
spring.cloud.stream.bindings.output.destination=legalbriefs
spring.cloud.stream.default.contentType=application/json



## Events queues
#spring.cloud.stream.bindings.initialiseEvent.destination=pkt
#spring.cloud.stream.bindings.initialiseEvent.content-type=application/json
#spring.cloud.stream.bindings.initialiseEvent.group=event.initialise
#spring.cloud.stream.rabbit.bindings.initialiseEvent.consumer.binding-routing-key=event.initialise
#spring.cloud.stream.bindings.validateEvent.destination=pkt
#spring.cloud.stream.bindings.validateEvent.content-type=application/json
#spring.cloud.stream.bindings.validateEvent.group=event.validate
#spring.cloud.stream.rabbit.bindings.validateEvent.consumer.binding-routing-key=event.validate
#spring.cloud.stream.bindings.connectBroadbandEvent.destination=pkt
#spring.cloud.stream.bindings.connectBroadbandEvent.content-type=application/json
#spring.cloud.stream.bindings.connectBroadbandEvent.group=event.connect.broadband
#spring.cloud.stream.rabbit.bindings.connectBroadbandEvent.consumer.binding-routing-key=event.connect.broadband
#spring.cloud.stream.bindings.confirmBroadbandEvent.destination=pkt
#spring.cloud.stream.bindings.confirmBroadbandEvent.content-type=application/json
#spring.cloud.stream.bindings.confirmBroadbandEvent.group=event.confirm.broadband
#spring.cloud.stream.rabbit.bindings.confirmBroadbandEvent.consumer.binding-routing-key=event.confirm.broadband
#spring.cloud.stream.bindings.updatePacketEvent.destination=pkt
#spring.cloud.stream.bindings.updatePacketEvent.content-type=application/json
#spring.cloud.stream.bindings.updatePacketEvent.group=event.update.packet
#spring.cloud.stream.rabbit.bindings.updatePacketEvent.consumer.binding-routing-key=event.update.packet
#spring.cloud.stream.bindings.connectMvnoEvent.destination=pkt
#spring.cloud.stream.bindings.connectMvnoEvent.content-type=application/json
#spring.cloud.stream.bindings.connectMvnoEvent.group=event.connect.mvno
#spring.cloud.stream.rabbit.bindings.connectMvnoEvent.consumer.binding-routing-key=event.connect.mvno
#spring.cloud.stream.bindings.activateBroadbandEvent.destination=pkt
#spring.cloud.stream.bindings.activateBroadbandEvent.content-type=application/json
#spring.cloud.stream.bindings.activateBroadbandEvent.group=event.activate.broadband
#spring.cloud.stream.rabbit.bindings.activateBroadbandEvent.consumer.binding-routing-key=event.activate.broadband
#  # Link event
#spring.cloud.stream.bindings.linkEvent.destination=pkt
#spring.cloud.stream.bindings.linkEvent.content-type=application/json
#spring.cloud.stream.bindings.linkEvent.group=event.link
#spring.cloud.stream.rabbit.bindings.linkEvent.consumer.binding-routing-key=event.link
#spring.cloud.stream.bindings.checkEvent.destination=pkt
#spring.cloud.stream.bindings.checkEvent.content-type=application/json
#spring.cloud.stream.bindings.checkEvent.group=event.check
#spring.cloud.stream.rabbit.bindings.checkEvent.consumer.binding-routing-key=event.check
#
#spring.cloud.stream.bindings.notifyEvent.destination=pkt
#spring.cloud.stream.bindings.notifyEvent.content-type=application/json
#spring.cloud.stream.bindings.notifyEvent.group=event.notify
#spring.cloud.stream.rabbit.bindings.notifyEvent.consumer.binding-routing-key=event.notify
#
#spring.cloud.stream.bindings.createPacketInstanceEvent.destination=pkt
#spring.cloud.stream.bindings.createPacketInstanceEvent.content-type=application/json
#spring.cloud.stream.bindings.createPacketInstanceEvent.group=event.create.packetinstance
#spring.cloud.stream.rabbit.bindings.createPacketInstanceEvent.consumer.binding-routing-key=event.create.packetinstance
#
#spring.cloud.stream.bindings.updatePacketInstanceEvent.destination=pkt
#spring.cloud.stream.bindings.updatePacketInstanceEvent.content-type=application/json
#spring.cloud.stream.bindings.updatePacketInstanceEvent.group=event.update.packetinstance
#spring.cloud.stream.rabbit.bindings.updatePacketInstanceEvent.consumer.binding-routing-key=event.update.packetinstance
#spring.cloud.stream.bindings.bookSimEvent.destination=pkt
#spring.cloud.stream.bindings.bookSimEvent.content-type=application/json
#spring.cloud.stream.bindings.bookSimEvent.group=event.booksim
#spring.cloud.stream.rabbit.bindings.bookSimEvent.consumer.binding-routing-key=event.booksim
#
## Commands queues
#spring.cloud.stream.bindings.validateCommand.destination=pkt
#spring.cloud.stream.bindings.validateCommand.content-type=application/json
#spring.cloud.stream.bindings.validateCommand.producer.required-groups=command.validate
#spring.cloud.stream.rabbit.bindings.validateCommand.producer.binding-routing-key=command.validate
#spring.cloud.stream.rabbit.bindings.validateCommand.producer.routing-key-expression='command.validate'
#spring.cloud.stream.bindings.connectBroadbandCommand.destination=pkt
#spring.cloud.stream.bindings.connectBroadbandCommand.content-type=application/json
#spring.cloud.stream.bindings.connectBroadbandCommand.producer.required-groups=command.connect.broadband
#spring.cloud.stream.rabbit.bindings.connectBroadbandCommand.producer.binding-routing-key=command.connect.broadband
#spring.cloud.stream.rabbit.bindings.connectBroadbandCommand.producer.routing-key-expression='command.connect.broadband'
#spring.cloud.stream.bindings.connectMvnoCommand.destination=pkt
#spring.cloud.stream.bindings.connectMvnoCommand.content-type=application/json
#spring.cloud.stream.bindings.connectMvnoCommand.producer.required-groups=command.connect.mvno
#spring.cloud.stream.rabbit.bindings.connectMvnoCommand.producer.binding-routing-key=command.connect.mvno
#spring.cloud.stream.rabbit.bindings.connectMvnoCommand.producer.routing-key-expression='command.connect.mvno'
#spring.cloud.stream.bindings.linkCommand.destination=pkt
#spring.cloud.stream.bindings.linkCommand.content-type=application/json
#spring.cloud.stream.bindings.linkCommand.producer.required-groups=command.link
#spring.cloud.stream.rabbit.bindings.linkCommand.producer.binding-routing-key=command.link
#spring.cloud.stream.rabbit.bindings.linkCommand.producer.routing-key-expression='command.link'
#spring.cloud.stream.bindings.checkCommand.destination=pkt
#spring.cloud.stream.bindings.checkCommand.content-type=application/json
#spring.cloud.stream.bindings.checkCommand.producer.required-groups=command.check
#spring.cloud.stream.rabbit.bindings.checkCommand.producer.binding-routing-key=command.check
#spring.cloud.stream.rabbit.bindings.checkCommand.producer.routing-key-expression='command.check'
#
#spring.cloud.stream.bindings.notifyCommand.destination=pkt
#spring.cloud.stream.bindings.notifyCommand.content-type=application/json
#spring.cloud.stream.bindings.notifyCommand.producer.required-groups=command.notify
#spring.cloud.stream.rabbit.bindings.notifyCommand.producer.binding-routing-key=command.notify
#spring.cloud.stream.rabbit.bindings.notifyCommand.producer.routing-key-expression='command.notify'
#
#spring.cloud.stream.bindings.createPacketInstanceCommand.destination=pkt
#spring.cloud.stream.bindings.createPacketInstanceCommand.content-type=application/json
#spring.cloud.stream.bindings.createPacketInstanceCommand.producer.required-groups=command.create.packetinstance
#spring.cloud.stream.rabbit.bindings.createPacketInstanceCommand.producer.binding-routing-key=command.create.packetinstance
#spring.cloud.stream.rabbit.bindings.createPacketInstanceCommand.producer.routing-key-expression='command.create.packetinstance'
#
#spring.cloud.stream.bindings.updatePacketInstanceCommand.destination=pkt
#spring.cloud.stream.bindings.updatePacketInstanceCommand.content-type=application/json
#spring.cloud.stream.bindings.updatePacketInstanceCommand.producer.required-groups=command.update.packetinstance
#spring.cloud.stream.rabbit.bindings.updatePacketInstanceCommand.producer.binding-routing-key=command.update.packetinstance
#spring.cloud.stream.rabbit.bindings.updatePacketInstanceCommand.producer.routing-key-expression='command.update.packetinstance'
#spring.cloud.stream.bindings.bookSimCommand.destination=pkt
#spring.cloud.stream.bindings.bookSimCommand.content-type=application/json
#spring.cloud.stream.bindings.bookSimCommand.producer.required-groups=command.booksim
#spring.cloud.stream.rabbit.bindings.bookSimCommand.producer.binding-routing-key=command.booksim
#spring.cloud.stream.rabbit.bindings.bookSimCommand.producer.routing-key-expression='command.booksim'
#  # Database
#spring.jpa.hibernate.ddl-auto=none
#spring.datasource.initialization-mode=never
#spring.datasource.username=${DATASOURCE_USERNAME}
#spring.datasource.password=${DATASOURCE_PASSWORD}
#spring.datasource.url=${DATASOURCE_URL}
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.jpa.properties.hibernate.default_schema=pkt_order
#spring.datasource.platform=postgresql
#  # To fix org.postgresql.jdbc.PgConnection.createClob() is not yet implemented
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect
#  # If you want to show sql
#  #logging.level.org.hibernate.SQL=DEBUG
#  #logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#  # Or
#  #spring.jpa.properties.hibernate.show_sql=true
#  #spring.jpa.properties.hibernate.use_sql_comments=true
#  #spring.jpa.properties.hibernate.format_sql=true
#
#  # Security
#application.userName=admin
#application.password=password
#application.roles=ADMIN
## Registry
#eureka.client.service-url.defaultZone=${REGISTRY_URL}
## Liquibase
#application.liquibaseChangeLog=classpath:db/liquibase/changelog-master.xml
#application.liquibaseSchema=pkt_order